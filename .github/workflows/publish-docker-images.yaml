name: Publish docker images

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
    tags: [ "*.*.*" ]

permissions:
  packages: write

jobs:
  docker:
    name: "Build and publish b6 docker images"

    strategy:
      matrix:
        image: ["b6", "b6-minimal"]
        # Note: Only one os for now; but could be extended to it runs on other
        # architectures, for example.
        os: [ "ubuntu-latest" ]

    runs-on: ${{ matrix.os }}

    steps:
    - name: "Checkout"
      uses: actions/checkout@v4

    - name: "Prepare nix"
      uses: cachix/install-nix-action@V27
      with:
        extra_nix_config: |
          accept-flake-config = true
          log-lines = 1000

    - name: "Setup cachix cache"
      uses: cachix/cachix-action@v15
      with:
        name: diagonalworks
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    # Note: We don't tag this build as "latest"; we will leave that to
    # always be pinned to the main branch by the other workflow file.
    - name: "Build docker image"
      env:
        IMAGE_NAME: ${{ matrix.os == 'ubuntu-latest' && matrix.image || format('{0}-{1}', matrix.image, matrix.os) }}
      run: |
        # Build the image
        nix build .#${{ matrix.image }}-image
        ./result | docker load

        # Sort out the labels
        BUILDING_TAG=${{ github.ref_type == 'tag' }}
        VERSION_NAME=latest

        IMAGE_LABEL=ghcr.io/diagonalworks/diagonal-${IMAGE_NAME}:${VERSION_NAME}

        # If we're building a tag, the version name is the tag name.
        [[ ${BUILDING_TAG} = true ]] && \
          VERSION_NAME=${{ github.ref_name }}

        # Set image things
        echo "FROM ${{ matrix.image }}" | docker build \
          --label org.opencontainers.image.created=$(date -Is) \
          --label org.opencontainers.image.revision=${{ github.sha }} \
          --label org.opencontainers.image.version=${VERSION_NAME} \
          --tag ${IMAGE_LABEL} -

        docker images
        docker inspect ${IMAGE_LABEL}

        echo "IMAGE_LABEL=${IMAGE_LABEL}" >> $GITHUB_ENV

    - name: "Login to GitHub container registry"
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: "Push to the registry"
      run: |
        docker push ${IMAGE_LABEL}
